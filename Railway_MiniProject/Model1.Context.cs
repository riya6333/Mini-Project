//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Railway_MiniProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RailwayReservation_ProjectEntities : DbContext
    {
        public RailwayReservation_ProjectEntities()
            : base("name=RailwayReservation_ProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Cancellation> Cancellations { get; set; }
        public virtual DbSet<Class_Detail> Class_Detail { get; set; }
        public virtual DbSet<Train> Trains { get; set; }
    
        public virtual int AddClass_Detail(Nullable<int> train_No, string class_Name, Nullable<int> total_Seats, Nullable<int> available_Seats, Nullable<decimal> fare)
        {
            var train_NoParameter = train_No.HasValue ?
                new ObjectParameter("Train_No", train_No) :
                new ObjectParameter("Train_No", typeof(int));
    
            var class_NameParameter = class_Name != null ?
                new ObjectParameter("Class_Name", class_Name) :
                new ObjectParameter("Class_Name", typeof(string));
    
            var total_SeatsParameter = total_Seats.HasValue ?
                new ObjectParameter("Total_Seats", total_Seats) :
                new ObjectParameter("Total_Seats", typeof(int));
    
            var available_SeatsParameter = available_Seats.HasValue ?
                new ObjectParameter("Available_Seats", available_Seats) :
                new ObjectParameter("Available_Seats", typeof(int));
    
            var fareParameter = fare.HasValue ?
                new ObjectParameter("Fare", fare) :
                new ObjectParameter("Fare", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddClass_Detail", train_NoParameter, class_NameParameter, total_SeatsParameter, available_SeatsParameter, fareParameter);
        }
    
        public virtual int AddTrain(Nullable<int> train_No, string train_Name, string source_Station, string destination_Station)
        {
            var train_NoParameter = train_No.HasValue ?
                new ObjectParameter("Train_No", train_No) :
                new ObjectParameter("Train_No", typeof(int));
    
            var train_NameParameter = train_Name != null ?
                new ObjectParameter("Train_Name", train_Name) :
                new ObjectParameter("Train_Name", typeof(string));
    
            var source_StationParameter = source_Station != null ?
                new ObjectParameter("Source_Station", source_Station) :
                new ObjectParameter("Source_Station", typeof(string));
    
            var destination_StationParameter = destination_Station != null ?
                new ObjectParameter("Destination_Station", destination_Station) :
                new ObjectParameter("Destination_Station", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTrain", train_NoParameter, train_NameParameter, source_StationParameter, destination_StationParameter);
        }
    
        public virtual int BookTrain_Ticket(Nullable<int> train_No, string passenger_Name, string class_Name, Nullable<System.DateTime> travel_Date, Nullable<int> tickets_Count)
        {
            var train_NoParameter = train_No.HasValue ?
                new ObjectParameter("Train_No", train_No) :
                new ObjectParameter("Train_No", typeof(int));
    
            var passenger_NameParameter = passenger_Name != null ?
                new ObjectParameter("Passenger_Name", passenger_Name) :
                new ObjectParameter("Passenger_Name", typeof(string));
    
            var class_NameParameter = class_Name != null ?
                new ObjectParameter("Class_Name", class_Name) :
                new ObjectParameter("Class_Name", typeof(string));
    
            var travel_DateParameter = travel_Date.HasValue ?
                new ObjectParameter("Travel_Date", travel_Date) :
                new ObjectParameter("Travel_Date", typeof(System.DateTime));
    
            var tickets_CountParameter = tickets_Count.HasValue ?
                new ObjectParameter("Tickets_Count", tickets_Count) :
                new ObjectParameter("Tickets_Count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookTrain_Ticket", train_NoParameter, passenger_NameParameter, class_NameParameter, travel_DateParameter, tickets_CountParameter);
        }
    
        public virtual int Cancel_Ticket(Nullable<int> booking_ID, string passenger_Name, Nullable<int> train_No, string class_Name, Nullable<int> tickets_Count)
        {
            var booking_IDParameter = booking_ID.HasValue ?
                new ObjectParameter("Booking_ID", booking_ID) :
                new ObjectParameter("Booking_ID", typeof(int));
    
            var passenger_NameParameter = passenger_Name != null ?
                new ObjectParameter("Passenger_Name", passenger_Name) :
                new ObjectParameter("Passenger_Name", typeof(string));
    
            var train_NoParameter = train_No.HasValue ?
                new ObjectParameter("Train_No", train_No) :
                new ObjectParameter("Train_No", typeof(int));
    
            var class_NameParameter = class_Name != null ?
                new ObjectParameter("Class_Name", class_Name) :
                new ObjectParameter("Class_Name", typeof(string));
    
            var tickets_CountParameter = tickets_Count.HasValue ?
                new ObjectParameter("Tickets_Count", tickets_Count) :
                new ObjectParameter("Tickets_Count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cancel_Ticket", booking_IDParameter, passenger_NameParameter, train_NoParameter, class_NameParameter, tickets_CountParameter);
        }
    
        public virtual ObjectResult<Display_Train_Result> Display_Train()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Train_Result>("Display_Train");
        }
    
        public virtual ObjectResult<string> TrainStatus(Nullable<int> train_No)
        {
            var train_NoParameter = train_No.HasValue ?
                new ObjectParameter("Train_No", train_No) :
                new ObjectParameter("Train_No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TrainStatus", train_NoParameter);
        }
    }
}
